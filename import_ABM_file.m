function [t, IN_CEM, OUT_CEM, IN_CEM_rate, OUT_CEM_rate, COIN_rate] = import_ABM_file(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [T, IN_CEM, OUT_CEM, IN_CEM_RATE, OUT_CEM_RATE, COIN_RATE] =
%  IMPORTFILE(FILENAME) reads data from text file FILENAME for the
%  default selection.  Returns the data as column vectors.
%
%  [T, IN_CEM, OUT_CEM, IN_CEM_RATE, OUT_CEM_RATE, COIN_RATE] =
%  IMPORTFILE(FILE, DATALINES) reads data for the specified row
%  interval(s) of text file FILENAME. Specify DATALINES as a positive
%  scalar integer or a N-by-2 array of positive scalar integers for
%  dis-contiguous row intervals.
%
%  Example:
%  [t, IN_CEM, OUT_CEM, IN_CEM_rate, OUT_CEM_rate, COIN_rate] = importfile("/Users/lykhoo/Library/CloudStorage/OneDrive-PrincetonUniversity/Beam_CAL_database/Deceleration/HVPS-ABM-Data-2024.12.06/ABM-Counts_2024.12.06_6.csv", [2, Inf]);
%
%  See also READTABLE.
%
%  Note that IN_CEM = Aft CEM; OUT_CEM = Fore CEM at current setup
%
% Auto-generated by MATLAB on 17-Dec-2024 17:40:49

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 6);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["t", "IN_CEM", "OUT_CEM", "IN_CEM_rate", "OUT_CEM_rate", "COIN_rate"];
opts.VariableTypes = ["datetime", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, "t", "InputFormat", "MM/dd/yyyy/HH:mm:ss.S", "DatetimeFormat", "preserveinput");

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
t = tbl.t;
IN_CEM = tbl.IN_CEM;
OUT_CEM = tbl.OUT_CEM;
IN_CEM_rate = tbl.IN_CEM_rate;
OUT_CEM_rate = tbl.OUT_CEM_rate;
COIN_rate = tbl.COIN_rate;
end
